package exp04Smoking

import jsonData.{JsonFileUtils, JsonKeys}
import legacy.StartExperiment04
import org.apache.spark.sql.SparkSession
import org.scalatest.{BeforeAndAfterAll, BeforeAndAfterEach}
import org.scalatest.funsuite.AnyFunSuite
import pipelines.SmokingPipeline

import scala.collection.mutable

class PipelineTest extends AnyFunSuite with BeforeAndAfterAll with BeforeAndAfterEach {

  val spark = SparkSession.builder.
    appName("SparkSessionExample").
    master("local[24]").
    getOrCreate
  import spark.implicits._

  val testInputFolder = "testData"
  val testOutputFolder = "testDataOutput"
  val testFile = "testData/smokingLemma.json"
  val utilDataFolder = "utilityDictionaries"
  val stopWords = JsonFileUtils.readDictionaryWordsJsonToArray(utilDataFolder, JsonKeys.stopWords)
  val smokingWords = JsonFileUtils.readDictionaryWordsJsonToArray(utilDataFolder, JsonKeys.smokingWords)

  val pipeline = new SmokingPipeline(stopWords)

  test("should get all lemmas of a text") {
    val dataFrame = JsonFileUtils.readJsonToDataFrame(testFile);
    dataFrame.show()
    val outputDf = pipeline.run(dataFrame)
    outputDf.show()

    val lemmaDf = StartExperiment04.filterOutAllDuplicateLemmas(outputDf, smokingWords)
    lemmaDf.show()
    val resultList = lemmaDf.select("lemma").first().getAs[mutable.WrappedArray[String]](0).toList

    val expectedList = List("Smoke", "smoke", "cigarette", "cigar");
    assert(resultList.equals(expectedList))
  }
}
